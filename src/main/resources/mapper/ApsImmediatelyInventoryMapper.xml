<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.benewake.system.mapper.ApsImmediatelyInventoryMapper">

    <resultMap id="BaseResultMap" type="com.benewake.system.entity.ApsImmediatelyInventory">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="fMaterialId" column="f_material_id" jdbcType="VARCHAR"/>
        <result property="fStockName" column="f_stock_name" jdbcType="VARCHAR"/>
        <result property="fBaseQty" column="f_base_qty" jdbcType="INTEGER"/>
        <result property="fAvbQty" column="f_avb_qty" jdbcType="INTEGER"/>
        <result property="fLot" column="f_lot" jdbcType="VARCHAR"/>
        <result property="fExpiryDate" column="f_expiry_date" jdbcType="VARCHAR"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ApsImmediatelyInventoryDtoResultMap"
               type="com.benewake.system.entity.dto.ApsImmediatelyInventoryDto">
        <id property="id" column="id"/>
        <result property="materialId" column="f_material_id"/>
        <result property="materialName" column="f_material_name"/>
        <result property="stockName" column="f_stock_name"/>
        <result property="baseQty" column="f_base_qty"/>
        <result property="avbQty" column="f_avb_qty"/>
        <result property="lot" column="f_lot"/>
        <result property="expiryDate" column="f_expiry_date"/>
        <result property="chVersion" column="ch_version_name"/>
    </resultMap>


    <sql id="Base_Column_List">
        id,f_material_id,f_stock_name,
        f_base_qty,f_avb_qty,f_lot,
        f_expiry_date,version
    </sql>
    <insert id="insertSelectVersionIncr">
        INSERT INTO aps_immediately_inventory (f_material_id, f_stock_name, f_base_qty, f_avb_qty, f_lot, f_expiry_date,
                                               version)
        SELECT f_material_id,
               f_stock_name,
               f_base_qty,
               f_avb_qty,
               f_lot,
               f_expiry_date,
               version + 1
        FROM `aps_immediately_inventory`
        WHERE version = (
            SELECT max(version)
            FROM aps_immediately_inventory)
    </insert>

    <select id="selectVersionPageList"
            resultType="com.benewake.system.entity.Interface.ApsImmediatelyInventoryMultipleVersions">
        SELECT *
        from
        <foreach collection="versions" item="item" index="index" open="(" separator=" UNION ALL " close=")">
            SELECT * ,#{item.chVersionName} as ch_version_name FROM aps_immediately_inventory WHERE version =
            #{item.version}
        </foreach>
        AS derived_table
        ORDER BY f_lot, version DESC
        limit #{pass},#{size};
    </select>
    <!--    <select id="selectPageList"-->
    <!--            resultType="com.benewake.system.entity.dto.ApsImmediatelyInventoryDto">-->
    <!--        SELECT-->
    <!--        inv.id,-->
    <!--        inv.f_material_id,-->
    <!--        map.f_material_name,-->
    <!--        f_stock_name,-->
    <!--        f_base_qty,-->
    <!--        f_avb_qty,-->
    <!--        f_lot,-->
    <!--        f_expiry_date,-->
    <!--        ch_version_name as version-->
    <!--        FROM-->
    <!--        <foreach collection="versions" item="item" index="index" open="(" separator=" UNION ALL " close=")">-->
    <!--            SELECT * ,#{item.chVersionName} as ch_version_name FROM aps_immediately_inventory WHERE version =-->
    <!--            #{item.version}-->
    <!--        </foreach>-->
    <!--        AS inv-->
    <!--        LEFT JOIN aps_material_name_mapping AS map ON inv.f_material_id = map.f_material_id-->
    <!--    </select>    -->
    <select id="selectPageList"
            resultMap="ApsImmediatelyInventoryDtoResultMap">
        SELECT
        inv.id,
        inv.f_material_id ,
        map.f_material_name ,
        f_stock_name ,
        f_base_qty ,
        f_avb_qty ,
        f_lot ,
        f_expiry_date ,
        ch_version_name
        FROM
        (
        SELECT *,
        CASE
        <foreach collection="versions" item="item" separator=" ">
            WHEN version = #{item.version} THEN #{item.chVersionName}
        </foreach>
        END AS ch_version_name
        FROM aps_immediately_inventory
        WHERE version IN
        <foreach collection="versions" item="item" open="(" separator="," close=")">
            #{item.version}
        </foreach>
        ) AS inv
        LEFT JOIN
        aps_material_name_mapping AS map ON inv.f_material_id = map.f_material_id
        ORDER BY inv.version desc
    </select>
    <select id="selectPageLists"
            resultMap="ApsImmediatelyInventoryDtoResultMap">
        SELECT
        inv.id,
        inv.f_material_id ,
        map.f_material_name ,
        f_stock_name ,
        f_base_qty ,
        f_avb_qty ,
        f_lot ,
        f_expiry_date ,
        ch_version_name
        FROM
        (
        SELECT *,
        CASE
        <foreach collection="versions" item="item" separator=" ">
            WHEN version = #{item.version} THEN #{item.chVersionName}
        </foreach>
        END AS ch_version_name
        FROM aps_immediately_inventory
        WHERE (version IN
        <foreach collection="versions" item="item" open="(" separator="," close=")">
            #{item.version}
        </foreach>)
        ) AS inv
        LEFT JOIN
        aps_material_name_mapping AS map ON inv.f_material_id = map.f_material_id
        <if test="ew != null and ew.sqlSegment != null and ew.sqlSegment.trim().length() > 0">
            ${ew.customSqlSegment}
        </if>
    </select>
    <select id="searchLike"
            resultMap="ApsImmediatelyInventoryDtoResultMap">
        select
        distinct ${ew.sqlSelect}
        from
        (
        SELECT *,
        CASE
        <foreach collection="versions" item="item" separator=" ">
            WHEN version = #{item.version} THEN #{item.chVersionName}
        </foreach>
        END AS ch_version_name
        FROM aps_immediately_inventory
        WHERE (version IN
        <foreach collection="versions" item="item" open="(" separator="," close=")">
            #{item.version}
        </foreach>)
        ) AS inv
        LEFT JOIN
        aps_material_name_mapping AS map ON inv.f_material_id = map.f_material_id
        <if test="ew!= null and ew.sqlSegment!= null and ew.sqlSegment.trim().length() > 0">
            ${ew.customSqlSegment}
        </if>
    </select>

</mapper>
