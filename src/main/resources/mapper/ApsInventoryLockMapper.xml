<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.benewake.system.mapper.ApsInventoryLockMapper">

    <resultMap id="BaseResultMap" type="com.benewake.system.entity.ApsInventoryLock">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="fMaterialId" column="f_material_id" jdbcType="VARCHAR"/>
        <result property="fExpiryDate" column="f_expiry_date" jdbcType="DATE"/>
        <result property="fLockQty" column="f_lock_qty" jdbcType="INTEGER"/>
        <result property="fLot" column="f_lot" jdbcType="VARCHAR"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,f_material_id,f_expiry_date,
        f_lock_qty,f_lot,version
    </sql>

    <resultMap id="apsInventoryLockDtoResultMap" type="com.benewake.system.entity.dto.ApsInventoryLockDto">
        <id property="id" column="id"/>
        <result property="materialId" column="f_material_id"/>
        <result property="materialName" column="f_material_name"/>
        <result property="expiryDate" column="f_expiry_date"/>
        <result property="lockQty" column="f_lock_qty"/>
        <result property="lot" column="f_lot"/>
        <result property="chVersion" column="ch_version_name"/>
    </resultMap>

    <insert id="insertSelectVersionIncr">
        insert into aps_inventory_lock(f_material_id, f_expiry_date,
                                       f_lock_qty, f_lot, version)
        select f_material_id,
               f_expiry_date,
               f_lock_qty,
               f_lot,
               version + 1
        from aps_inventory_lock
        where version = (select max(version) from aps_inventory_lock)
    </insert>
    <select id="selectVersionPageList"
            resultType="com.benewake.system.entity.Interface.ApsInventoryLockMultipleVersions">
        SELECT *
        from
        <foreach collection="versions" item="item" index="index" open="(" separator=" UNION ALL " close=")">
            SELECT * ,#{item.chVersionName} as ch_version_name FROM aps_inventory_lock WHERE version =
            #{item.version}
        </foreach>
        AS derived_table
        ORDER BY f_lot, version DESC
        limit #{pass},#{size};
    </select>
    <select id="selectPageList" resultMap="apsInventoryLockDtoResultMap">
        SELECT
        loc.id,
        loc.f_material_id,
        map.f_material_name,
        f_expiry_date,
        f_lock_qty,
        f_lot,
        ch_version_name
        FROM
        (
        SELECT *,
        CASE
        <foreach collection="versions" item="item" separator=" ">
            WHEN version = #{item.version} THEN #{item.chVersionName}
        </foreach>
        ELSE NULL
        END AS ch_version_name
        FROM aps_inventory_lock
        WHERE version IN
        <foreach collection="versions" item="item" open="(" separator="," close=")">
            #{item.version}
        </foreach>
        ) AS loc
        LEFT JOIN aps_material_name_mapping AS map ON loc.f_material_id = map.f_material_id
        ORDER BY loc.version desc
    </select>
    <select id="selectPageLists" resultMap="apsInventoryLockDtoResultMap">
        SELECT
        loc.id,
        loc.f_material_id,
        map.f_material_name,
        f_expiry_date,
        f_lock_qty,
        f_lot,
        ch_version_name
        FROM
        (
        SELECT *,
        CASE
        <foreach collection="versions" item="item" separator=" ">
            WHEN version = #{item.version} THEN #{item.chVersionName}
        </foreach>
        ELSE NULL
        END AS ch_version_name
        FROM aps_inventory_lock
        WHERE version IN
        <foreach collection="versions" item="item" open="(" separator="," close=")">
            #{item.version}
        </foreach>
        ) AS loc
        LEFT JOIN aps_material_name_mapping AS map ON loc.f_material_id = map.f_material_id
        <if test="ew != null and ew.sqlSegment != null and ew.sqlSegment.trim().length() > 0">
            ${ew.customSqlSegment}
        </if>
    </select>
    <select id="searchLike"
            resultMap="apsInventoryLockDtoResultMap">
        SELECT
        distinct ${ew.sqlSelect}
        FROM
        (
        SELECT *,
        CASE
        <foreach collection="versions" item="item" separator=" ">
            WHEN version = #{item.version} THEN #{item.chVersionName}
        </foreach>
        ELSE NULL
        END AS ch_version_name
        FROM aps_inventory_lock
        WHERE version IN
        <foreach collection="versions" item="item" open="(" separator="," close=")">
            #{item.version}
        </foreach>
        ) AS loc
        LEFT JOIN aps_material_name_mapping AS map ON loc.f_material_id = map.f_material_id
        <if test="ew != null and ew.sqlSegment != null and ew.sqlSegment.trim().length() > 0">
            ${ew.customSqlSegment}
        </if>
    </select>


</mapper>
