<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.benewake.system.mapper.ApsPurchaseRequestMapper">

    <resultMap id="BaseResultMap" type="com.benewake.system.entity.ApsPurchaseRequest">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="fMaterialId" column="f_material_id" jdbcType="VARCHAR"/>
        <result property="fBaseUnitQty" column="f_base_unit_qty" jdbcType="VARCHAR"/>
        <result property="fArrivalDate" column="f_arrival_date" jdbcType="VARCHAR"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,f_material_id,f_base_unit_qty,
        f_arrival_date,version
    </sql>
    <insert id="insertSelectVersionIncr">
        insert into aps_purchase_request(f_material_id, f_base_unit_qty,
                                         f_arrival_date, version)
        select f_material_id,
               f_base_unit_qty,
               f_arrival_date,
               version + 1
        from aps_purchase_request
        where version = (select max(version) from aps_purchase_request)
    </insert>
    <select id="selectVersionPageList"
            resultType="com.benewake.system.entity.Interface.ApsPurchaseRequestMultipleVersions">
        SELECT *
        from
        <foreach collection="versions" item="item" index="index" open="(" separator=" UNION ALL " close=")">
            SELECT * ,#{item.chVersionName} as ch_version_name FROM aps_purchase_request WHERE version =
            #{item.version}
        </foreach>
        AS derived_table
        ORDER BY f_lot, version DESC
        limit #{pass},#{size};
    </select>
    <select id="selectPageList" resultType="com.benewake.system.entity.dto.ApsPurchaseRequestDto">
        SELECT
        req.id,
        req.f_material_id,
        map.f_material_name,
        f_base_unit_qty,
        f_arrival_date,
        ch_version_name AS version
        FROM
        (
        SELECT *,
        CASE
        <foreach collection="versions" item="item" separator=" ">
            WHEN version = #{item.version} THEN #{item.chVersionName}
        </foreach>
        ELSE NULL
        END AS ch_version_name
        FROM aps_purchase_request
        WHERE version IN
        <foreach collection="versions" item="item" open="(" separator="," close=")">
            #{item.version}
        </foreach>
        ) AS req
        LEFT JOIN aps_material_name_mapping AS map ON req.f_material_id = map.f_material_id
        ORDER BY req.version desc
    </select>

</mapper>
